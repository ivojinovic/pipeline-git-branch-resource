#!/bin/sh
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh
source $(dirname $0)/branches_common.sh

destination=$1
if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/git-resource-request.XXXXXX)
cat > $payload <&0
load_pubkey $payload
configure_git_ssl_verification $payload
configure_credentials $payload

# Get the parameters for this resource instance
source $(dirname $0)/export_parameter_values.sh
export_parameter_values $payload

# Get the list of active dev branches
clone_git_repo_into_directory $PARAM_APP_GIT_URI $CONST_APP_GIT_DIR
cd $CONST_APP_GIT_DIR
if [ -n "${PARAM_APP_DEV_BRANCH_FILTER}" ]; then
    LOC_APP_DEV_BRANCHES=$(git branch -r --no-merged | sed "s/origin\///" | $PARAM_APP_DEV_BRANCH_FILTER | xargs)
else
    LOC_APP_DEV_BRANCHES=$(git branch -r --no-merged | sed "s/origin\///" | xargs)
fi

# Log in to concourse
LOC_CONCOURSE_TARGET=savannah
echo -e "$PARAM_CONCOURSE_USERNAME\n$PARAM_CONCOURSE_PASSWORD\n" | fly -t $LOC_CONCOURSE_TARGET login --concourse-url $PARAM_CONCOURSE_URL

# Create the pipeline for the active dev branches
/opt/resource/set_dev_branches_pipeline.sh $LOC_CONCOURSE_TARGET CONCOURSE $LOC_APP_DEV_BRANCHES

jq -n "{
  version: {ref: $(echo $LOC_APP_DEV_BRANCHES | jq -R .)}
}" >&3
