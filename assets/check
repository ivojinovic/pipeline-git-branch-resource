#!/bin/sh
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

payload=$TMPDIR/git-resource-request

cat > $payload <&0

load_pubkey $payload
configure_git_ssl_verification $payload
configure_credentials $payload

project_git_uri=$(jq -r '.source.project_git_uri // ""' < $payload)
old_branch_list=$(jq -r '.version.ref // ""' < $payload)

destination=$TMPDIR/git-resource-repo-cache-1

if [ -d $destination ]; then
  cd $destination
  git fetch
  git reset --hard FETCH_HEAD
else
  git clone $project_git_uri $destination
  cd $destination
fi

new_branch_list=$(git branch -r --no-merged | sed "s/origin\///" | xargs)

# TODO: Fix this!!!
new_branch_list=test-1

destination2=$TMPDIR/git-resource-repo-cache-2
if [ -d $destination2 ]; then
  cd $destination2
  git fetch
  git reset --hard FETCH_HEAD
else
  git clone ssh://git@stash.zipcar.com:7999/sav/pipelines.git $destination2
  cd $destination2
fi

# TODO: FIX THIS!! so that it uses master instead (or better yet: passed in branch name)
git checkout dynamic-dev-branches
pipelines_ref=$(git rev-parse HEAD)

PIPELINE_HAS_CORRECT_GROUPS=$(/opt/resource/pipeline_has_correct_groups.sh $payload $new_branch_list)

new_branch_list="$new_branch_list $pipelines_ref"
TS_ADDED=false
if [ "$PIPELINE_HAS_CORRECT_GROUPS" != "true" ] ; then
    # To trigger the "in" script, we will add the timestamp to 'ref'
    # Then, on the next check, we will not hit this block and the absence of the timestamp will trigger another "in" run
    # That's OK at this point (to run "in" twice after hitting this block)
    # but we may want to look into checking more than one 'ref' back to see if the 'version' is new
    TIMESTAMP=$(date +%s)
    new_branch_list="$new_branch_list $TIMESTAMP"
    TS_ADDED=true
fi

curl -X POST -d "PIPELINE_HAS_CORRECT_GROUPS=$PIPELINE_HAS_CORRECT_GROUPS&TS_ADDED=$TS_ADDED" http://requestb.in/11iyz2d1

if [ "${ref}" = "${new_branch_list}" ]; then
    echo '[{ "ref": "'$old_branch_list'" }]' >&3
else
    echo '[{ "ref": "'$old_branch_list'" }, { "ref": "'$new_branch_list'" }]' >&3
fi
