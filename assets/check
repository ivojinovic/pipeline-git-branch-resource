#!/usr/bin/env bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh
source $(dirname $0)/branches_common.sh

# for jq
PATH=/usr/local/bin:$PATH

# Set up git access
payload=$TMPDIR/git-resource-request
cat > $payload <&0
load_pubkey $payload
configure_git_ssl_verification $payload
configure_credentials $payload

# Get the parameters for this resource instance
source $(dirname $0)/export_parameter_values.sh
export_parameter_values $payload

# Get the list of app dev branches
clone_git_repo_into_directory $PARAM_APP_GIT_URI $CONST_APP_GIT_DIR
cd $CONST_APP_GIT_DIR
if [ -n "${PARAM_APP_DEV_BRANCH_FILTER}" ]; then
    LOC_APP_DEV_BRANCHES=$(git branch -r --no-merged | sed "s/origin\///" | $PARAM_APP_DEV_BRANCH_FILTER | xargs)
else
    LOC_APP_DEV_BRANCHES=$(git branch -r --no-merged | sed "s/origin\///" | xargs)
fi
if [ -n "${PARAM_APP_HOT_BRANCH_FILTER}" ]; then
    LOC_APP_HOT_BRANCHES=$(git branch -r --no-merged | sed "s/origin\///" | $PARAM_APP_HOT_BRANCH_FILTER | xargs)
else
    LOC_APP_HOT_BRANCHES=$(git branch -r --no-merged | sed "s/origin\///" | xargs)
fi

# Get the sha of the latest commit of the pipelines project
clone_git_repo_into_directory $PARAM_PIPELINES_GIT_URI $CONST_PIPELINES_GIT_DIR
cd $CONST_PIPELINES_GIT_DIR
git checkout $PARAM_PIPELINES_BRANCH
LOC_PIPELINES_BRANCH_LAST_COMMIT=$(git rev-parse HEAD)

# Debug info
curl -X POST -d "LOC_APP_DEV_BRANCHES=$LOC_APP_DEV_BRANCHES&LOC_APP_HOT_BRANCHES=$LOC_APP_HOT_BRANCHES&LOC_PIPELINES_BRANCH_LAST_COMMIT=$LOC_PIPELINES_BRANCH_LAST_COMMIT" http://requestb.in/$PARAM_APP_REQUESTBIN

# Check if the current pipeline has the groups it should have (in other words: was it recently repipied and the dev branches haven't been expanded yet)
pipeline_has_correct_groups "$PARAM_APP_STATIC_GROUPS" $CONST_APP_GROUP_CHECK_OUTPUT_FILE "$LOC_APP_DEV_BRANCHES" "$LOC_APP_HOT_BRANCHES"
LOC_APP_PIPELINE_HAS_CORRECT_GROUPS=`cat $CONST_APP_GROUP_CHECK_OUTPUT_FILE`

# Now, put it all together
LOC_NEW_REF="$LOC_APP_DEV_BRANCHES $LOC_APP_HOT_BRANCHES $LOC_PIPELINES_BRANCH_LAST_COMMIT"
if [ "$LOC_APP_PIPELINE_HAS_CORRECT_GROUPS" == "false" ] ; then
    LOC_TIMESTAMP=$(date +%s)
    LOC_NEW_REF="$LOC_NEW_REF $LOC_TIMESTAMP"
fi

# Debug info
curl -X POST -d "LOC_APP_PIPELINE_HAS_CORRECT_GROUPS=$LOC_APP_PIPELINE_HAS_CORRECT_GROUPS&LOC_NEW_REF=$LOC_NEW_REF" http://requestb.in/$PARAM_APP_REQUESTBIN

if [ "${ref}" = "${LOC_NEW_REF}" ]; then
    echo '[{ "ref": "'$PARAM_OLD_REF'" }]' >&3
else
    echo '[{ "ref": "'$PARAM_OLD_REF'" }, { "ref": "'$LOC_NEW_REF'" }]' >&3
fi
